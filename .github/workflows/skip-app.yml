# This workflow is meant to be called remotely from a Skip app project.
#
# The action will build and test both the Swift and Gradle projects 
# transpiled through Skip.
#
# When tagged with a semantic version (e.g., "1.2.3"), the action will
# create and distribute release .apk and .ipa artifacts from the project.
#
# An example invocation script is as follows, which runs for 
# every push, every PR, every semver tag, and every day at noon GMT:
#
# name: skipapp
# on:
#   push:
#     branches: '*'
#     tags: "[0-9]+.[0-9]+.[0-9]+"
#   schedule:
#     - cron: '0 12 * * *'
#   workflow_dispatch:
#   pull_request:
# 
# permissions:
#   contents: write
# 
# jobs:
#   call-workflow:
#     uses: skiptools/actions/.github/workflows/skip-app.yml@main
# 
name: "Skip App CI"
on:
  workflow_call:
jobs:
  skip-app:
    runs-on: macos-14
    timeout-minutes: 120
    env:     
      DEVELOPER_DIR: /Applications/Xcode_15.4.app/Contents/Developer
      #DEVELOPER_DIR: /Applications/Xcode_16_beta_6.app/Contents/Developer
      #DEVELOPER_DIR: /Applications/Xcode_16.1_beta.app/Contents/Developer
    steps:
      - run: brew install skiptools/skip/skip

      - uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'

      - run: java -version

      # larger projects sometimes yield: Unhandled exception. System.IO.IOException: No space left on device : '/Users/runner/runners/â€¦
      - name: Free Disk Space
        run: sudo rm -rf /Applications/Xcode_14*

      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Setup
        run: |
          # convert "refs/tags/1.0.0" to "1.0.0"
          # and "refs/heads/main" to "main"
          TAG=${GITHUB_REF#refs/*/}
          # the version if it matches the semantic tag pattern, otherwise "dev"
          echo "RELTAG=${TAG:-'dev'}" >> $GITHUB_ENV
          # the path to generate the artifacts (.ipa, .apk, etc.)
          echo "RELDIR=Skip/build/artifacts" >> $GITHUB_ENV

          echo "COMMIT_DATE=$(git log -1 --format=%ad --date=iso-strict ${TAG})" >> $GITHUB_ENV

          # the primary skip module is the first product name
          SKIP_MODULE=$(basename Darwin/*.xcodeproj .xcodeproj)
          echo "SKIP_MODULE=${SKIP_MODULE}" >> $GITHUB_ENV

          # update Skip.env to set version string to the latest semver tag
          sed -i '' "s;MARKETING_VERSION = .*;MARKETING_VERSION = $(git describe --tags --abbrev=0 --match '[0-9]*\.[0-9]*\.[0-9]*' --first-parent);g" Skip.env

          # update Skip.env to set build number to the git commit count
          sed -i '' "s;PRODUCT_VERSION = .*;PRODUCT_VERSION = $(git rev-list --count HEAD);g" Skip.env

      - name: Verify Skip App
        run: skip verify

      - name: Darwin Fastlane
        run: test ! -d Darwin/fastlane || (cd Darwin && FASTLANE_SKIP_ARCHIVE=YES FASTLANE_SKIP_CODESIGNING=YES fastlane assemble)

      - name: Android Fastlane
        run: test ! -d Android/fastlane || (cd Android && fastlane assemble)

      - name: Export project
        run: skip export -v --summary-file=$GITHUB_STEP_SUMMARY

      - name: Run Tests
        run: test ! -d Tests || skip test || skip test -v

      - name: "Release"
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release create "${RELTAG}" -t "Release ${RELTAG}" --generate-notes .build/skip-export/*.*

      - name: "Upload Build Artifacts"
        uses: actions/upload-artifact@v4
        if: always()
        with: 
          path: .build/skip-export/

